[DEV]
id=sh1
key=sh.ky1

[GATEWAY]
; 
; if needed for long term, but should be passed as args to start the nodes
; api_id=guest
; api_key=guest
; use * to receive all incoming messages not directly sent to this node
; id=*
; id=nd1
; do not include the http nor https
connection_url=localhost

outgoing_exchange_name=DEKU_CLUSTER_SMS
routing_exchange_name=DEKU_CLUSTER_ROUTING
;
; handles messages which are to be sent out
outgoing_queue_name=OUTGOING_SMS
;
; handles messages which are received
routing_queue_name=ROUTING_SMS
;
; prefetch_count=number of messages each consumer will handle at a time
; default=1 
prefetch_count=1
;
; auto_ack=respond with an acknowledge as soon as message has been dispatched
; 0 = False, 1 = True
; default=0
auto_ack=1
;
; durable=maintain messages even after server is restarted 
; 0 = False, 1 = True
; default=0
durable=0
;
; based on rabbitMQ exchange types
outgoing_exchange_type=topic
;
; format = "<developer id>:<node id>:<isp>
; # = receive all messages
binding_key=#
; 0 = OFFLINE 
; 1 = ONLINE
; 2 = SWITCH
route_mode=1
; Do not change if you are not sure
; Determines if SMS is routed to another location on receive
; 0 = No
; 1 = Yes
route=1

# a post request would be sent to this URL whenever an SMS message is received
route_url=http://localhost

# change isp to the ISP you want to send out the message
route_isp=orange

# insert your external routing number (if it is from Twilio, insert here)
router_phonenumber=000000

[NODE]
; 
; if needed for long term, but should be passed as args to start the nodes
api_id=guest
api_key=guest
; use * to receive all incoming messages not directly sent to this node
; id=*
id=nd1
; do not include the http nor https
connection_url=locahost

outgoing_exchange_name=DEKU_CLUSTER_SMS
routing_exchange_name=DEKU_CLUSTER_ROUTING
;
; handles messages which are to be sent out
outgoing_queue_name=OUTGOING_SMS
;
; handles messages which are received
routing_queue_name=ROUTING_SMS
;
; prefetch_count=number of messages each consumer will handle at a time
; default=1 
prefetch_count=1
;
; auto_ack=respond with an acknowledge as soon as message has been dispatched
; 0 = False, 1 = True
; default=0
auto_ack=1
;
; durable=maintain messages even after server is restarted 
; 0 = False, 1 = True
; default=0
durable=0
;
; based on rabbitMQ exchange types
outgoing_exchange_type=topic
;
; format = "<developer id>:<node id>:<isp>
; # = receive all messages
binding_key=#


[API]
PORT=6868

# 0 = false, 1 = true
DEBUG = 1

# 0.0.0.0 = external access
HOST = 127.0.0.1


[ISP]
country=cameroon


[MODEMS]
sleep_time=3
failed_sleep=10
benchmark_limit=7
;
; can't be busy for more than 2 minutes
; seconds()
busy_benchmark_limit=10


[TRANSMISSION]
; in secs
duration=1200
